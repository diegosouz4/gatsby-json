{"version":3,"file":"component---src-pages-projetos-index-jsx-aaf109bc55c651e2ec92.js","mappings":"sKAEO,MAAMA,EAAkBA,KAChBC,EAAAA,EAAAA,gBAAe,cAchBC,KAAKC,aCdJ,SAASC,EAAGC,GAA8C,IAA7C,MAAEC,EAAK,YAAEC,EAAW,SAAEC,EAAQ,SAAEC,GAAUJ,EACpE,MACEC,MAAOI,EACPH,YAAaI,EAAkB,MAC/BC,EAAK,QACLC,EAAO,KACPC,GACEd,IAEEe,EAAM,CACVT,MAAOA,GAASI,EAChBH,YAAaA,GAAeI,EAC5BC,MAAM,GAAIA,EACVI,IAAI,GAAIH,GAAUL,GAAQ,IAC1BM,KAAMA,GAGR,OACEG,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQF,EAAIT,OACZW,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,EAAIR,cACtCU,EAAAA,cAAA,QAAMC,KAAK,QAAQC,QAASJ,EAAIH,QAChCK,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,wBAClCF,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASJ,EAAIT,QACxCW,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,EAAIC,MACtCC,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASJ,EAAIR,cAC9CU,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASJ,EAAIH,QACxCK,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,QAASJ,EAAIK,kBAC1CH,EAAAA,cAAA,QAAMI,IAAI,OAAOC,KAAMP,EAAID,KAAMS,KAAK,kBACrCd,EAGP,C,mJC7BA,MAAMe,EAAa,YAkBJ,SAASC,IACtB,MAAM,SAAEC,IAAazB,EAAAA,EAAAA,gBAAeuB,IAC7BG,EAAaC,GAAkBX,EAAAA,SAAeS,IAE9CG,EAAQC,GAAab,EAAAA,SAAe,CAAC,UACrCc,EAAmBC,GAAwBf,EAAAA,WAQlD,OANAA,EAAAA,WAAgB,QAEb,CAACY,IAEJI,QAAQC,IAAI,wBAAyBP,GAGnCV,EAAAA,cAACkB,EAAAA,EAAa,KACZlB,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAAA,UACGU,GACCA,EAAYS,MAAMC,KAAKC,GACrBrB,EAAAA,cAAA,MAAIsB,IAAKD,EAAQE,IACfvB,EAAAA,cAACwB,EAAAA,EAAW,CACV7B,MAAO0B,EAAQI,OAAO,GAAGC,gBAAgBC,gBACzCC,IAAG,oBAAsBP,EAAQhC,QAEnCW,EAAAA,cAAA,UAAKqB,EAAQhC,OACbW,EAAAA,cAAA,UACGqB,EAAQQ,KAAKT,KAAKU,GACjB9B,EAAAA,cAAA,MAAIsB,IAAKQ,GAAMA,MAGnB9B,EAAAA,cAAC+B,EAAAA,KAAI,CAACC,GAAE,aAAeX,EAAQY,MAAQ,mBAMrD,CAEO,MAAMC,EAAOA,IAAMlC,EAAAA,cAACb,EAAAA,EAAG,CAACE,MAAM,uB","sources":["webpack://gatsby-json/./src/hooks/useSiteMetadata.jsx","webpack://gatsby-json/./src/componentes/Seo.jsx","webpack://gatsby-json/./src/pages/projetos/index.jsx"],"sourcesContent":["import { useStaticQuery, graphql } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n          image\n          icon\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import React from \"react\";\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\";\n\nexport default function Seo({ title, description, pathname, children }) {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image,\n    siteUrl,\n    icon,\n  } = useSiteMetadata();\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${image}`,\n    url: `${siteUrl}${pathname || ``}`,\n    icon: icon,\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\n      <link rel=\"icon\" href={seo.icon} type=\"image/svg+xml\"></link>\n      {children}\n    </>\n  );\n}\n","import React from \"react\";\nimport Seo from \"../../componentes/Seo\";\nimport LayoutDefault from \"../../layouts/LayoutDefault\";\nimport { Link, graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst queryProjetos = graphql`\n  query {\n    projetos: allProjetosJson {\n      nodes {\n        id\n        title\n        tags\n        slug\n        images {\n          childImageSharp {\n            gatsbyImageData(sizes: \"400\", placeholder: BLURRED)\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProjetosPage() {\n  const { projetos } = useStaticQuery(queryProjetos);\n  const [allProjetos, setAllProjetos] = React.useState(projetos);\n\n  const [filtro, setFiltro] = React.useState([\"html\"]);\n  const [projetosFiltrados, setProjetosFiltrados] = React.useState();\n\n  React.useEffect(()=>{\n    \n  }, [filtro])\n\n  console.log(\"projetos no use state\", allProjetos);\n\n  return (\n    <LayoutDefault>\n      <h1>Meus projetos</h1>\n      <ul>\n        {allProjetos &&\n          allProjetos.nodes.map((projeto) => (\n            <li key={projeto.id}>\n              <GatsbyImage\n                image={projeto.images[0].childImageSharp.gatsbyImageData}\n                alt={`thumb do projeto ${projeto.title}`}\n              />\n              <h2>{projeto.title}</h2>\n              <ul>\n                {projeto.tags.map((tag) => (\n                  <li key={tag}>{tag}</li>\n                ))}\n              </ul>\n              <Link to={`/projetos/${projeto.slug}`}>Ver projeto</Link>\n            </li>\n          ))}\n      </ul>\n    </LayoutDefault>\n  );\n}\n\nexport const Head = () => <Seo title=\"PÃ¡gina dos projetos\" />;\n"],"names":["useSiteMetadata","useStaticQuery","site","siteMetadata","Seo","_ref","title","description","pathname","children","defaultTitle","defaultDescription","image","siteUrl","icon","seo","url","React","name","content","twitterUsername","rel","href","type","queryProjetos","ProjetosPage","projetos","allProjetos","setAllProjetos","filtro","setFiltro","projetosFiltrados","setProjetosFiltrados","console","log","LayoutDefault","nodes","map","projeto","key","id","GatsbyImage","images","childImageSharp","gatsbyImageData","alt","tags","tag","Link","to","slug","Head"],"sourceRoot":""}